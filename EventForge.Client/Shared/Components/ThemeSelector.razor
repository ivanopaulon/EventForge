@using EventForge.Client.Services
@inject IThemeService ThemeService
@inject ITranslationService TranslationService

<!-- Simplified theme selector: only dark / light toggle via ThemeService.ToggleThemeAsync -->
<MudTooltip Text="@TranslationService.GetTranslation("theme.selectTheme", "Select theme")">
    <MudIconButton Icon="@(ThemeService.IsDarkMode ? Icons.Material.Filled.DarkMode : Icons.Material.Filled.LightMode)"
                   Color="Color.Inherit"
                   OnClick="@(async () => await ThemeService.ToggleThemeAsync())"
                   Size="Size.Small"
                   aria-label="@TranslationService.GetTranslation("theme.toggle", "Toggle theme")" />
</MudTooltip>

@code {
    [Parameter] public bool TextLabels { get; set; } = false;
    [Parameter] public string? Class { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ThemeService.OnThemeChanged += OnThemeChanged;
        await base.OnInitializedAsync();
    }

    private void OnThemeChanged()
    {
        InvokeAsync(StateHasChanged);
    }

    private async Task HandleThemeSelection(string themeKey)
    {
        await ThemeService.SetThemeAsync(themeKey);
    }

    private string GetCurrentThemeIcon() => ThemeService.IsDarkMode ? Icons.Material.Filled.DarkMode : Icons.Material.Filled.LightMode;
}