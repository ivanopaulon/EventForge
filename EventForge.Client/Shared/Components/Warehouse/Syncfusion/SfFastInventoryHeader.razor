@inject ITranslationService TranslationService

<!-- Session Status Banner with Enhanced Statistics -->
@if (CurrentDocument != null)
{
    <div class="sf-alert sf-alert-info mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h6 style="font-weight: 600; margin-bottom: 0.5rem;">
                    @TranslationService.GetTranslation("warehouse.inventorySessionActive", "Sessione di Inventario Attiva")
                </h6>
                <p style="margin-bottom: 0.25rem;">
                    @TranslationService.GetTranslation("warehouse.documentNumber", "Documento") #@CurrentDocument.Number - 
                    @CurrentDocument.TotalItems @TranslationService.GetTranslation("warehouse.itemsCounted", "articoli contati")
                </p>
                <small>
                    @TranslationService.GetTranslation("warehouse.sessionStarted", "Iniziata il") @SessionStartTime.ToLocalTime().ToString("dd/MM/yyyy HH:mm")
                </small>
            </div>
            <div class="d-flex gap-2">
                <SfButton IconCss="e-icons e-download" CssClass="e-outline e-info"
                         OnClick="@(() => OnExport.InvokeAsync())"
                         Disabled="@(CurrentDocument.TotalItems == 0)">
                    @TranslationService.GetTranslation("common.export", "Esporta")
                </SfButton>
                <SfButton IconCss="e-icons e-check" CssClass="e-success"
                         OnClick="@(() => OnRequestFinalize.InvokeAsync())"
                         Disabled="@(CurrentDocument.TotalItems == 0)">
                    @TranslationService.GetTranslation("warehouse.finalizeInventory", "Finalizza")
                </SfButton>
                <SfButton IconCss="e-icons e-close" CssClass="e-outline"
                         OnClick="@(() => OnRequestCancel.InvokeAsync())">
                    @TranslationService.GetTranslation("common.cancel", "Annulla")
                </SfButton>
            </div>
        </div>
    </div>

    <!-- Enhanced Session Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-3 mb-2">
            <div class="sf-stat-card">
                <div class="sf-stat-icon sf-stat-icon-primary">
                    <span class="e-icons e-list-unordered"></span>
                </div>
                <div class="sf-stat-content">
                    <div class="sf-stat-value">@CurrentDocument.TotalItems</div>
                    <div class="sf-stat-label">@TranslationService.GetTranslation("warehouse.totalRows", "Righe Totali")</div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-2">
            <div class="sf-stat-card">
                <div class="sf-stat-icon sf-stat-icon-success">
                    <span class="e-icons e-plus"></span>
                </div>
                <div class="sf-stat-content">
                    <div class="sf-stat-value">@PositiveAdjustmentsCount</div>
                    <div class="sf-stat-label">@TranslationService.GetTranslation("warehouse.positiveAdjustments", "Agg. Positivi")</div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-2">
            <div class="sf-stat-card">
                <div class="sf-stat-icon sf-stat-icon-warning">
                    <span class="e-icons e-minus"></span>
                </div>
                <div class="sf-stat-content">
                    <div class="sf-stat-value">@NegativeAdjustmentsCount</div>
                    <div class="sf-stat-label">@TranslationService.GetTranslation("warehouse.negativeAdjustments", "Agg. Negativi")</div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-2">
            <div class="sf-stat-card">
                <div class="sf-stat-icon sf-stat-icon-info">
                    <span class="e-icons e-clock"></span>
                </div>
                <div class="sf-stat-content">
                    <div class="sf-stat-value">@SessionDuration</div>
                    <div class="sf-stat-label">@TranslationService.GetTranslation("warehouse.sessionDuration", "Durata Sessione")</div>
                </div>
            </div>
        </div>
    </div>
}

<!-- Inline Finalize Confirmation Banner -->
@if (ShowFinalizeConfirmation)
{
    <div class="sf-alert sf-alert-warning mb-4">
        <div>
            <h6>@TranslationService.GetTranslation("warehouse.confirmFinalizeTitle", "Conferma Finalizzazione")</h6>
            <p>@TranslationService.GetTranslation("warehouse.confirmFinalizeMessage", "Sei sicuro di voler finalizzare questo inventario? Gli aggiustamenti saranno applicati al magazzino.")</p>
            <div class="d-flex gap-2 mt-3">
                <SfButton CssClass="e-success" OnClick="@(() => OnConfirmFinalize.InvokeAsync())">
                    @TranslationService.GetTranslation("common.confirm", "Conferma")
                </SfButton>
                <SfButton CssClass="e-outline" OnClick="@(() => OnCancelFinalize.InvokeAsync())">
                    @TranslationService.GetTranslation("common.cancel", "Annulla")
                </SfButton>
            </div>
        </div>
    </div>
}

<!-- Inline Cancel Confirmation Banner -->
@if (ShowCancelConfirmation)
{
    <div class="sf-alert sf-alert-danger mb-4">
        <div>
            <h6>@TranslationService.GetTranslation("warehouse.confirmCancelTitle", "Conferma Annullamento")</h6>
            <p>@TranslationService.GetTranslation("warehouse.confirmCancelMessage", "Sei sicuro di voler annullare questa sessione? Tutte le modifiche andranno perse.")</p>
            <div class="d-flex gap-2 mt-3">
                <SfButton CssClass="e-danger" OnClick="@(() => OnConfirmCancel.InvokeAsync())">
                    @TranslationService.GetTranslation("common.confirm", "Conferma")
                </SfButton>
                <SfButton CssClass="e-outline" OnClick="@(() => OnCancelCancel.InvokeAsync())">
                    @TranslationService.GetTranslation("common.cancel", "Annulla")
                </SfButton>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public InventoryDocumentDto? CurrentDocument { get; set; }
    [Parameter] public DateTime SessionStartTime { get; set; }
    [Parameter] public int PositiveAdjustmentsCount { get; set; }
    [Parameter] public int NegativeAdjustmentsCount { get; set; }
    [Parameter] public string SessionDuration { get; set; } = string.Empty;
    [Parameter] public bool ShowFinalizeConfirmation { get; set; }
    [Parameter] public bool ShowCancelConfirmation { get; set; }
    
    [Parameter] public EventCallback OnExport { get; set; }
    [Parameter] public EventCallback OnRequestFinalize { get; set; }
    [Parameter] public EventCallback OnConfirmFinalize { get; set; }
    [Parameter] public EventCallback OnCancelFinalize { get; set; }
    [Parameter] public EventCallback OnRequestCancel { get; set; }
    [Parameter] public EventCallback OnConfirmCancel { get; set; }
    [Parameter] public EventCallback OnCancelCancel { get; set; }
}
