@using MudBlazor
@using EventForge.DTOs.SuperAdmin
@inject ISuperAdminService SuperAdminService
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudContainer Style="max-width: 600px;">
            <MudText Typo="Typo.h6" Class="mb-4">Modifica Utente</MudText>
            
            <MudForm @ref="_form" Model="_updateDto" @bind-IsValid="_isFormValid">
                <MudGrid>
                    <MudItem xs="12" md="6">
                        <MudTextField @bind-Value="_updateDto.FirstName"
                                      Label="Nome *"
                                      Variant="Variant.Outlined"
                                      Required="true"
                                      RequiredError="Il nome è obbligatorio"
                                      MaxLength="100" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField @bind-Value="_updateDto.LastName"
                                      Label="Cognome *"
                                      Variant="Variant.Outlined"
                                      Required="true"
                                      RequiredError="Il cognome è obbligatorio"
                                      MaxLength="100" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField Value="@User.Username"
                                      Label="Username"
                                      Variant="Variant.Outlined"
                                      ReadOnly="true"
                                      HelperText="L'username non può essere modificato" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField @bind-Value="_updateDto.Email"
                                      Label="Email *"
                                      Variant="Variant.Outlined"
                                      InputType="InputType.Email"
                                      Required="true"
                                      RequiredError="L'email è obbligatoria"
                                      MaxLength="256" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField Value="@(User.TenantName ?? "N/A")"
                                      Label="Tenant"
                                      Variant="Variant.Outlined"
                                      ReadOnly="true"
                                      HelperText="Il tenant non può essere modificato" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudSwitch T="bool" @bind-Checked="_updateDto.IsActive"
                                   Label="Utente Attivo"
                                   Color="Color.Primary" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudText Typo="Typo.subtitle1" Class="mb-3">Ruoli</MudText>
                        <div class="d-flex flex-wrap ga-2">
                            @foreach (var role in _availableRoles)
                            {
                                <MudCheckBox T="bool" @bind-Checked="@(_selectedRoles[role])"
                                             Label="@role"
                                             Color="Color.Primary" />
                            }
                        </div>
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField Value="@User.Id.ToString()"
                                      Label="ID Utente"
                                      Variant="Variant.Outlined"
                                      ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField Value="@User.CreatedAt.ToString("dd/MM/yyyy HH:mm")"
                                      Label="Data Creazione"
                                      Variant="Variant.Outlined"
                                      ReadOnly="true" />
                    </MudItem>
                </MudGrid>
            </MudForm>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Annulla</MudButton>
        <MudButton Color="Color.Primary" 
                   Variant="Variant.Filled"
                   OnClick="Update"
                   Disabled="@(!_isFormValid || _isUpdating)">
            @if (_isUpdating)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                <MudText Class="ms-2">Salvando...</MudText>
            }
            else
            {
                <MudText>Salva Modifiche</MudText>
            }
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private dynamic? MudDialog { get; set; }
    [Parameter] public UserManagementDto User { get; set; } = null!;

    private MudForm _form = null!;
    private bool _isFormValid;
    private bool _isUpdating;
    private UpdateUserManagementDto _updateDto = new();
    
    private readonly string[] _availableRoles = { "User", "Manager", "Admin" };
    private Dictionary<string, bool> _selectedRoles = new();

    protected override void OnInitialized()
    {
        // Initialize the update DTO with current user values
        _updateDto = new UpdateUserManagementDto
        {
            FirstName = User.FirstName,
            LastName = User.LastName,
            Email = User.Email,
            IsActive = User.IsActive,
            Roles = User.Roles.ToList()
        };
        
        // Initialize role selection
        foreach (var role in _availableRoles)
        {
            _selectedRoles[role] = User.Roles.Contains(role);
        }
    }

    private void Cancel() => MudDialog?.Cancel();

    private async Task Update()
    {
        if (!_isFormValid || MudDialog == null) return;

        try
        {
            _isUpdating = true;
            
            // Update roles from selection
            _updateDto.Roles = _selectedRoles.Where(kvp => kvp.Value).Select(kvp => kvp.Key).ToList();
            
            var updatedUser = await SuperAdminService.UpdateUserAsync(User.Id, _updateDto);
            MudDialog.Close(MudBlazor.DialogResult.Ok(updatedUser));
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Errore nell'aggiornamento dell'utente: {ex.Message}", Severity.Error);
        }
        finally
        {
            _isUpdating = false;
        }
    }
}