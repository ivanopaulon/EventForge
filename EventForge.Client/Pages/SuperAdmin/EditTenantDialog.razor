@using MudBlazor
@using EventForge.DTOs.Tenants
@using EventForge.DTOs.SuperAdmin
@inject ISuperAdminService SuperAdminService
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudContainer Style="max-width: 600px;">
            <MudText Typo="Typo.h6" Class="mb-4">Modifica Tenant</MudText>
            
            <MudForm @ref="_form" Model="_updateDto" @bind-IsValid="_isFormValid">
                <MudGrid>
                    <MudItem xs="12" md="6">
                        <MudTextField Value="@Tenant.Name"
                                      Label="Nome Tenant"
                                      Variant="Variant.Outlined"
                                      ReadOnly="true"
                                      HelperText="Il nome del tenant non può essere modificato" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField @bind-Value="_updateDto.DisplayName"
                                      Label="Nome Visualizzato *"
                                      Variant="Variant.Outlined"
                                      Required="true"
                                      RequiredError="Il nome visualizzato è obbligatorio"
                                      MaxLength="200" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField @bind-Value="_updateDto.Description"
                                      Label="Descrizione"
                                      Variant="Variant.Outlined"
                                      Lines="3"
                                      MaxLength="500" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField @bind-Value="_updateDto.Domain"
                                      Label="Dominio"
                                      Variant="Variant.Outlined"
                                      MaxLength="100" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField @bind-Value="_updateDto.ContactEmail"
                                      Label="Email Contatto *"
                                      Variant="Variant.Outlined"
                                      InputType="InputType.Email"
                                      Required="true"
                                      RequiredError="L'email di contatto è obbligatoria"
                                      MaxLength="256" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudNumericField @bind-Value="_updateDto.MaxUsers"
                                         Label="Massimo Utenti *"
                                         Variant="Variant.Outlined"
                                         Min="1"
                                         Max="10000"
                                         Required="true" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField Value="@Tenant.Id.ToString()"
                                      Label="ID Tenant"
                                      Variant="Variant.Outlined"
                                      ReadOnly="true" />
                    </MudItem>
                </MudGrid>
            </MudForm>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Annulla</MudButton>
        <MudButton Color="Color.Primary" 
                   Variant="Variant.Filled"
                   OnClick="Update"
                   Disabled="@(!_isFormValid || _isUpdating)">
            @if (_isUpdating)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                <MudText Class="ms-2">Salvando...</MudText>
            }
            else
            {
                <MudText>Salva Modifiche</MudText>
            }
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private dynamic? MudDialog { get; set; }
    [Parameter] public TenantResponseDto Tenant { get; set; } = null!;

    private MudForm _form = null!;
    private bool _isFormValid;
    private bool _isUpdating;
    private UpdateTenantDto _updateDto = new();

    protected override void OnInitialized()
    {
        // Initialize the update DTO with current tenant values
        _updateDto = new UpdateTenantDto
        {
            DisplayName = Tenant.DisplayName,
            Description = Tenant.Description,
            Domain = Tenant.Domain,
            ContactEmail = Tenant.ContactEmail,
            MaxUsers = Tenant.MaxUsers
        };
    }

    private void Cancel() => MudDialog?.Cancel();

    private async Task Update()
    {
        if (!_isFormValid || MudDialog == null) return;

        try
        {
            _isUpdating = true;
            var updatedTenant = await SuperAdminService.UpdateTenantAsync(Tenant.Id, _updateDto);
            MudDialog!.Close(MudBlazor.DialogResult.Ok(updatedTenant));
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Errore nell'aggiornamento del tenant: {ex.Message}", Severity.Error);
        }
        finally
        {
            _isUpdating = false;
        }
    }
}