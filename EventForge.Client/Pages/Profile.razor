@page "/profile"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject ITranslationService TranslationService

<PageTitle>@TranslationService.GetTranslation("profile.title", "My Profile") - EventForge</PageTitle>

@if (_isLoading)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" />
}
else if (!_isAuthenticated)
{
    <MudContainer MaxWidth="MaxWidth.Medium" Class="mt-8">
        <MudPaper Class="pa-8" Elevation="4">
            <MudGrid Justify="Justify.Center">
                <MudItem xs="12">
                    <div class="d-flex flex-column align-center">
                        <MudIcon Icon="Icons.Material.Filled.Block" Color="Color.Error" Size="Size.Large" Class="mb-4" Style="font-size: 72px;" />
                        <MudText Typo="Typo.h4" Align="Align.Center" Class="mb-4">@TranslationService.GetTranslation("error.accessDenied", "Access Denied")</MudText>
                        <MudText Typo="Typo.body1" Align="Align.Center" Class="mb-6">
                            @TranslationService.GetTranslation("auth.authenticationRequired", "You must be logged in to view your profile.")
                        </MudText>
                        <MudButton Variant="Variant.Filled" 
                                   Color="Color.Primary" 
                                   StartIcon="Icons.Material.Filled.Login"
                                   OnClick="@(() => NavigationManager.NavigateTo("/login"))">
                            @TranslationService.GetTranslation("auth.goToLogin", "Go to Login")
                        </MudButton>
                    </div>
                </MudItem>
            </MudGrid>
        </MudPaper>
    </MudContainer>
}
else
{
    <MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
        <MudText Typo="Typo.h3" Class="mb-8">
            <MudIcon Icon="Icons.Material.Filled.Person" Class="mr-3" />
            @TranslationService.GetTranslation("profile.title", "My Profile")
        </MudText>

        <MudGrid Spacing="4">
            <!-- Basic Information Card -->
            <MudItem xs="12" md="8">
                <MudCard Elevation="2" Class="pa-4">
                    <MudCardContent>
                        <MudText Typo="Typo.h6" Class="mb-4">
                            <MudIcon Icon="Icons.Material.Filled.AccountCircle" Class="mr-2" />
                            @TranslationService.GetTranslation("profile.basicInfo", "Basic Information")
                        </MudText>
                        @if (_currentUser != null)
                        {
                            <MudGrid Spacing="3">
                                <MudItem xs="12" sm="6">
                                    <MudTextField @bind-Value="_currentUser.FirstName"
                                                  Label="@TranslationService.GetTranslation("field.firstName", "First Name")"
                                                  Variant="Variant.Outlined"
                                                  ReadOnly="true" />
                                </MudItem>
                                <MudItem xs="12" sm="6">
                                    <MudTextField @bind-Value="_currentUser.LastName"
                                                  Label="@TranslationService.GetTranslation("field.lastName", "Last Name")"
                                                  Variant="Variant.Outlined"
                                                  ReadOnly="true" />
                                </MudItem>
                                <MudItem xs="12">
                                    <MudTextField @bind-Value="_currentUser.Email"
                                                  Label="@TranslationService.GetTranslation("field.email", "Email")"
                                                  Variant="Variant.Outlined"
                                                  ReadOnly="true" />
                                </MudItem>
                            </MudGrid>
                        }
                    </MudCardContent>
                </MudCard>
            </MudItem>

            <!-- Account Status Card -->
            <MudItem xs="12" md="4">
                <MudCard Elevation="2" Class="pa-4">
                    <MudCardContent>
                        <MudText Typo="Typo.h6" Class="mb-4">
                            <MudIcon Icon="Icons.Material.Filled.Security" Class="mr-2" />
                            @TranslationService.GetTranslation("profile.accountStatus", "Account Status")
                        </MudText>
                        @if (_currentUser?.Roles?.Any() == true)
                        {
                            <div class="mb-4">
                                <MudText Typo="Typo.subtitle2" Class="mb-2">@TranslationService.GetTranslation("field.roles", "Roles")</MudText>
                                <div class="d-flex flex-wrap ga-1">
                                    @foreach (var role in _currentUser.Roles)
                                    {
                                        <MudChip T="string" 
                                                 Color="@GetRoleColor(role)" 
                                                 Size="Size.Small" 
                                                 Variant="Variant.Filled">
                                            @role
                                        </MudChip>
                                    }
                                </div>
                            </div>
                        }
                        <div>
                            <MudText Typo="Typo.subtitle2" Class="mb-2">@TranslationService.GetTranslation("field.lastLogin", "Last Login")</MudText>
                            <MudText Typo="Typo.body2">
                                @(_currentUser?.LastLoginAt?.ToString("yyyy-MM-dd HH:mm") ?? TranslationService.GetTranslation("common.notAvailable", "N/A"))
                            </MudText>
                        </div>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>
    </MudContainer>
}

@code {
    private bool _isLoading = true;
    private bool _isAuthenticated = false;
    private UserDto? _currentUser;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _isAuthenticated = await AuthService.IsAuthenticatedAsync();
            if (_isAuthenticated)
            {
                _currentUser = await AuthService.GetCurrentUserAsync();
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error loading profile: {ex.Message}", Severity.Error);
        }
        finally
        {
            _isLoading = false;
        }
    }

    private Color GetRoleColor(string role)
    {
        return role.ToLower() switch
        {
            "superadmin" => Color.Error,
            "admin" => Color.Warning,
            "manager" => Color.Info,
            _ => Color.Primary
        };
    }
}