@page "/warehouse/facilities"
@using Microsoft.AspNetCore.Authorization
@using EventForge.DTOs.Warehouse
@using EventForge.Client.Shared.Components
@attribute [Authorize(Roles = "SuperAdmin,Admin,Manager")]
@inject EventForge.Client.Services.IWarehouseService WarehouseService
@inject ISnackbar Snackbar
@inject IDialogService DialogService
@inject ITranslationService TranslationService
@inject ILogger<WarehouseManagement> Logger

<PageTitle>@TranslationService.GetTranslation("warehouse.management", "Gestione Magazzini")</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4" Style="height:100vh; display:flex; flex-direction:column;">
 <PageLoadingOverlay IsVisible="_isLoading" Message="@TranslationService.GetTranslation("messages.loadingPage", "Caricamento pagina...")" />

 <MudPaper Elevation="1" Class="pa-3 mb-4" Style="min-height:0;">
 <MudText Typo="Typo.h4">
 <MudIcon Icon="@Icons.Material.Outlined.Warehouse" Class="mr-2" />
 @TranslationService.GetTranslation("warehouse.management", "Gestione Magazzini")
 </MudText>
 </MudPaper>

 <MudPaper Elevation="1" Class="pa-4 flex-grow-1 d-flex flex-column" Style="min-height:0;">
 <MudTextField @bind-Value="_search" Placeholder="@TranslationService.GetTranslation("warehouse.searchPlaceholder", "Cerca magazzini...")" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Outlined.Search" />
 <div Style="overflow:auto; min-height:0; flex:1;">
 <MudTable Items="@_warehouses" Loading="_isLoading" Hover="true" Striped="true" Class="mt-3">
 <HeaderContent>
 <MudTh>@TranslationService.GetTranslation("field.name", "Nome")</MudTh>
 <MudTh>@TranslationService.GetTranslation("field.code", "Codice")</MudTh>
 <MudTh>@TranslationService.GetTranslation("field.location", "Posizione")</MudTh>
 <MudTh>@TranslationService.GetTranslation("common.actions", "Azioni")</MudTh>
 </HeaderContent>
 <RowTemplate>
 <MudTd>@context.Name</MudTd>
 <MudTd>@context.Code</MudTd>
 <MudTd>@context.Address</MudTd>
 <MudTd>
 <MudButton Size="Size.Small" Variant="Variant.Text" OnClick="@(() => EditWarehouse(context))">@TranslationService.GetTranslation("common.edit", "Modifica")</MudButton>
 </MudTd>
 </RowTemplate>
 </MudTable>
 </div>
 </MudPaper>
</MudContainer>

@code {
 private bool _isLoading = true;
 private string _search = string.Empty;
 private List<StorageFacilityDto> _warehouses = new();

 protected override async Task OnInitializedAsync()
 {
 await LoadWarehouses();
 }

 private async Task LoadWarehouses()
 {
 try
 {
 _isLoading = true;
 var result = await WarehouseService.GetStorageFacilitiesAsync();
 _warehouses = result?.Items?.ToList() ?? new List<StorageFacilityDto>();
 }
 catch (Exception ex)
 {
 Logger.LogError(ex, "Error loading warehouses");
 Snackbar.Add(TranslationService.GetTranslation("common.errorLoading", "Errore nel caricamento"), Severity.Error);
 }
 finally
 {
 _isLoading = false;
 }
 }

 private void EditWarehouse(StorageFacilityDto warehouse)
 {
 Snackbar.Add(TranslationService.GetTranslation("common.notImplemented", "Funzionalit√† non ancora implementata"), Severity.Info);
 }
}
